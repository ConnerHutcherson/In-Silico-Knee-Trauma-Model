% Main run script for kinetic model of knee inflammation, MMP production,  and hormonal
% effects on the disease process
% This script is used to set the length of the simulation, the hormonal
% states, and the plot specifications
% After each run, the code saves the workspace variables and the
% corresponding figure

% This script prepared by Bethany Luke & Conner Hutcherson
% UT Southwestern Medical Center, 2024
% mail to: conner.hutcherson@utsouthwestern.edu

clear
close all
clc
tic

global Ks e2 estr0 test pr initial_conditions

%Function to generate human hormone profiles(n=22) using NLME model 
[xrange,E2_profiles,P4_profiles,T_profiles] = NOC_nlme_harm_terms();

cycle_length=30.00; % days

t_hormone=(xrange*cycle_length)*24; % hormone cycle length in hrs

%Model Time Inputs
num_substances = 13;

ti      = 0;              % initial time (hours) 
days    = 30;             % days of simulation time
tf      = days*24;        % total hours of simulation time
dt      = t_hormone(2)-t_hormone(1); % time step for saving simulation data (hr) (based on incremental time vector generated via NLME)
tspan   = ti:dt:tf;       % time span for simulation traces
range_factor = 0.2;       % sampling range for Sobol LHS Model

% Input female hormone profile breakdown
[P4_min_conc,P4_max_conc,P4_mean_conc,P4_median_conc,P4_bottom10,P4_top10,E2_min_conc,E2_max_conc,E2_mean_conc,E2_median_conc,E2_bottom10,E2_top10,T_min_conc,T_max_conc,T_mean_conc,T_median_conc] = NLME_hormone_profile_breakdown(t_hormone,E2_profiles,P4_profiles,T_profiles);
estr0 = 0.001; %84.08./1000; % nmol/L from Kou et al. 2015 OVX+no E2 condition, approximately the same as male concentration

%% Select which substances to plot/ Call rate coeficients and feedback functions

% Zero means no plot
% Another number signifies the position of the subplot
subs = zeros(1,num_substances);
subs(1) = 0; % Platelets
subs(2) = 1; % M1
subs(3) = 1; % M2
subs(4) = 1; % IL-1b
subs(5) = 1; % TNF-a
subs(6) = 1; % IL-10
subs(7) = 1; % TGF-b
subs(8) = 1; % MMP-9
subs(9) = 1; % MMP-1
subs(10) = 1; % TIMP-1
subs(11) = 1; % IL-6
subs(12) = 1; % MMP-13
subs(13) = 1; % MMP-3

% Determine the shape of the subplot arrangement
rows=3;
cols=4;

% Define rate coefficients
Ks = rate_coeffs;
abcs = all_parameter_fits;

%% Select LHS Sobol Simulation (1 = yes, anything else = no )

% Latin hypercube sampling for rate coefficients with nominal (absence of hormones) Sobol Analysis
% Set lhs_ks = 1, to run this script
lhs_ks = 0 ; % 1 is yes, anything else is no

num_coeffs = length(rate_coeffs);
num_fcoefs = length(abcs);

%% Select the different stable hormonal states to examine (1 = yes, anything else = no )
nominal = 0; 

% Set e2_only = 1, e2_plus_p = 1, and t_only = 1 at the same time to obtain the data for
% Figure 4. The figure can be generated by running this script (or loading
% the resulting .mat file) with these variables set to one, then running steady_hormones_ept_plots.m. 
female_cycle = 0;
male = 0;
female_cycle_sweep = 0;


%% Select the different LHS hormonal states to examine (1 = yes, anything else = no )
% Set vary_et_female = 1 and vary_et_male = 1 at the same time to obtain
% data for Figure 5. The figure can be generated by running this script (or loading
% the resulting .mat file) with these variables set to one, then running male_fem_vary_plots.m
vary_female = 0;
vary_male = 1 ; 

%% Name the simulation
if lhs_ks==1
    sim_name='lhs_ks';
elseif female_cycle==1 && male==0
    sim_name = 'steady_hormones_female';
elseif female_cycle==1  && male==1
    sim_name = 'steady_hormones_ept'; 
elseif female_cycle_sweep==1
    sim_name = 'female_hormone_sweep'; 
elseif female_cycle==0 && male==1
    sim_name = 'steady_hormones_male';
elseif vary_male==0 && vary_female==1
    sim_name = 'fem_vary';
elseif vary_male==1 && vary_female==1
    sim_name = 'male_fem_vary';
elseif vary_male==1 && vary_female==0
    sim_name = 'male_vary';
elseif nominal==1
    sim_name = 'nominal';
else
    sim_name = input('No automatic name found. Enter a simulation name (a string): ');
end

%% SOBOL LHS Simulation (no hormones)
if lhs_ks==1


%Select sensitivity index to be plotted in the figure:
    Si_plot = 1;
    STi_plot = 0;

    [Y,Sii,STii,median_sol,low_sol,high_sol] = lhs_script_sobol_nominal(num_substances,tspan,num_coeffs,num_fcoefs,range_factor); 
    plot_concentration_bands(subs,median_sol,high_sol,low_sol,tspan,'Ks')
end

%% Run the simulation in the absence of hormones (no hormones)
if nominal == 1
    e2 = estr0; 
    pr = 0; 
    test = 0;
    
    % Determine initial conditions in healthy joint (no macrophage chemotaxis) 
    sol_nominal_initial = dde23(@ode_ftn, 14, @cytokine_hist_zero, tspan); % T = time, C = cytokine data
    vec_initial = size(sol_nominal_initial.x);
    initial_conditions = sol_nominal_initial.y(:,(vec_initial(:,2)));
    
    % Run trauma model (w/macrophage chemotaxis)
    sol_nominal = dde23(@ode_ftn, 14, @cytokine_hist, tspan); % T = time, C = cytokine data

    % Plot model result
    plot_concentrations(rows,cols,subs,sol_nominal.y',sol_nominal.x,'k')

end

%% Run the simulation starting at an input time within female hormone profiles generated with a NLME Harmonics Model
if female_cycle == 1
    
    % User input to determine where in the muenstral cycle the model will
    %start
    t_injury = input('Enter the meunstral cycle time when the injury simulation will occurr (Enter a value between 0 to 30): ');

    if (t_injury >= 0) && (t_injury <= 30)
        
    % Estrogen NLME values
    e2=zeros(length(t_hormone),2);
    e2(:,1) = t_hormone;
    e2(:,2) = E2_mean_conc;
    
    % Progesterone NLME values
    pr=zeros(length(t_hormone),2);
    pr(:,1) = t_hormone;
    pr(:,2) = P4_mean_conc;

    % Testosterone NLME values         
    test=zeros(length(t_hormone),2);
    test(:,1) = t_hormone;
    test(:,2) = T_mean_conc;
    
    % Function to rearrange hormone profiles and time vector 
    [e2,~] = change_injury_timing(e2,t_injury);
    [pr,~] = change_injury_timing(pr,t_injury);
    [test,~] = change_injury_timing(test,t_injury);
         
    % Determine initial conditions in healthy joint (no macrophage chemotaxis) 
    sol_female_cycle_intial = dde23(@ode_ftn, 12, @cytokine_hist_zero, tspan);
    vec_initial = size(sol_female_cycle_intial.x);
    initial_conditions = sol_female_cycle_intial.y(:,(vec_initial(:,2)));
    
    % Run trauma model (w/macrophage chemotaxis)
    sol_female_cycle_struct = dde23(@ode_ftn, 12, @cytokine_hist, tspan); % T = time, C = cytokine data
    
    % Plot model result 
    plot_concentrations(rows,cols,subs,sol_female_cycle_struct.y',sol_female_cycle_struct.x,'r')
    
    elseif (t_injury > 30)
            error('Value exceeds maximum value')
            
    else
            error('Value is below minimum value')
    end

end

%% Run the simulation sweeping the starting point at each muenstral hormonal cycle day 
if female_cycle_sweep == 1
    
    % Create cell for intial condition and model results     

for i=1:cycle_length
    sol_female_sweep_cell{i}=zeros(num_substances, length(tspan));
    female_cycle_sweep_initial_conditions{i}=zeros(num_substances,1);
end

    % Model will be initialized with respect to the hormonal states at each
    %day throughout the female menstrual cycle
for k = 1:cycle_length+1

    % Estrogen NLME values
    e2=zeros(length(t_hormone),2);
    e2(:,1) = t_hormone;
    e2(:,2) = E2_mean_conc;
    
    % Progesterone NLME values
    pr=zeros(length(t_hormone),2);
    pr(:,1) = t_hormone;
    pr(:,2) = P4_mean_conc;

    % Testosterone NLME values         
    test=zeros(length(t_hormone),2);
    test(:,1) = t_hormone;
    test(:,2) = T_mean_conc;

    initial_conditions = zeros(15,1);

    % Functions to rearrange hormone profiles and time vector   
    [e2,~] = change_injury_timing(e2,(k-1));
    [pr,~] = change_injury_timing(pr,(k-1));
    [test,~] = change_injury_timing(test,(k-1));
    

    % Determine initial conditions in healthy joint (no macrophage chemotaxis) 
    sol_female_sweep_initial= dde23(@ode_ftn, 12, @cytokine_hist_zero, tspan); % T = time, C = cytokine data
    vec_initial = size(sol_female_sweep_initial.x);
    initial_conditions = sol_female_sweep_initial.y(:,(vec_initial(:,2)));
    female_cycle_sweep_initial_conditions{k}=initial_conditions;
    
    % Run trauma model (w/macrophage chemotaxis)
    sol_female_sweep = dde23(@ode_ftn, 12, @cytokine_hist, tspan); % T = time, C = cytokine data
    sol_female_sweep1 = deval(sol_female_sweep,tspan);
    
    % Model results stored in cell format (for each start day)
    for j=1:num_substances
    sol_female_sweep_cell{k}(j,:)=sol_female_sweep1(j,:);
    end
    
end 

    % Rename x axis values for plotting
    sol_female_sweep_t = sol_female_sweep.x;


end

%% Run the simulation with testosterone only
if male == 1
    
    % Human male hormone levels from serum found in literature
    e2 = estr0;  
    pr = 0.18e-3; % uM/L from Oettel et al. 2004
    test = 20; % nM/L
    
    % Determine initial conditions in healthy joint (no macrophage chemotaxis) 
    sol_male_intial = dde23(@ode_ftn, 12, @cytokine_hist_zero, tspan);
    vec_initial = size(sol_male_intial.x);
    initial_conditions = sol_male_intial.y(:,(vec_initial(:,2)));
    
    % Run trauma model (w/macrophage chemotaxis)
    sol_male_struct = dde23(@ode_ftn, 12, @cytokine_hist, tspan); % T = time, C = cytokine data
    sol_male = sol_male_struct.y';
    sol_t_male = sol_male_struct.x;
    
    % Plot model result 
    plot_concentrations(rows,cols,subs,sol_male_struct.y',sol_male_struct.x,'b')

end

%% Run the simulations while varying the female hormones around their average value at an input time within female hormone profiles generated with a NLME Harmonics Model

if vary_female == 1    
    
    % User input to determine where in the muenstral cycle the model will start
    t_injury = input('Enter the meunstral cycle time when the injury simulation will occurr (Enter a value between 0 to 30): ');
    
    if (t_injury >= 0) && (t_injury <= 30)
    
    
    % Run LHS Model
      [high_sol_female,low_sol_female,median_sol_female,all_sols_female,Param_vary_female,e2_vary_female,pr_vary_female,test_vary_female,abcs_Param_female] =lhs_script_ks_and_et(num_substances,tspan,num_coeffs,num_fcoefs,E2_min_conc,E2_max_conc,E2_median_conc,P4_min_conc,P4_max_conc,P4_median_conc,T_min_conc,T_max_conc,T_median_conc,range_factor,t_injury,t_hormone);
    elseif (t_injury > 30)
            error('Value exceeds maximum value')
            
    else
            error('Value is below minimum value')
    end

    
end


%% Run the simulations while varying the male hormones around their average value
if vary_male == 1
    
    t_injury = 0; %hormone profile assumed to be consistent at all model time points
    
    % Human male hormone concentration ranges from serum found in literature
    e_min=estr0;% % nM/L from Kou et al. 2015
    e_max=106/1000;% % nM/L from Kou et al. 2015
    p_min=0.13e-3; % uM/L from Oettel et al. 2004
    p_max=0.97e-3; % uM/L from Oettel et al. 2004
    t_min=8.7; % nM/L from Greenspan et al.
    t_max=38.1; % nM/L from Greenspan et al. 
    
      [high_sol_male,low_sol_male,median_sol_male,all_sols_male,Param_vary_male,e2_vary_male,pr_vary_male,test_vary_male,abcs_Param_male] = lhs_script_ks_male(num_substances,tspan,num_coeffs,num_fcoefs,e_min,e_max,p_min,p_max,t_min,t_max,range_factor,t_injury,t_hormone);
    
end
toc
%% Save Model Results
%saveas(gcf,strcat('figures/',sim_name,'.fig'))
save(sim_name)